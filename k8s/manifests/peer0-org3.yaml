apiVersion: v1
kind: Service
metadata:
  name: peer0-org3
  namespace: fabric-net
  labels:
    k8s-app: peer0-org3
spec:
  ports:
  - name: "7051"
    port: 7051
    targetPort: 7051
  - name: "7053"
    port: 7053
    targetPort: 7053
  selector:
    k8s-app: peer0-org3
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: peer0-org3
  namespace: fabric-net
  labels:
    k8s-app: peer0-org3
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: peer0-org3
  template:
    metadata:
      labels:
        k8s-app: peer0-org3
    spec:
      containers:
      - args:
        - peer
        - node
        - start
        env:
        - name: CORE_LOGGING_LEVEL
          value: DEBUG
        - name: CORE_PEER_ADDRESS
          value: peer0-org3.fabric-net.svc.cluster.local:7051
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: peer0-org3.fabric-net.svc.cluster.local:7051
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false"
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_ID
          value: peer0-org3.fabric-net.svc.cluster.local
        - name: CORE_PEER_LOCALMSPID
          value: Org3MSP
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: /etc/hyperledger/fabric/tls/server.crt
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_KEY_FILE
          value: /etc/hyperledger/fabric/tls/server.key
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: /etc/hyperledger/fabric/tls/ca.crt
        - name: CORE_VM_ENDPOINT
          value: unix:///host/var/run/docker.sock
        - name: GODEBUG
          value: netdns=go
        image: hyperledger/fabric-peer:latest
        imagePullPolicy: Never
        name: peer0-org3
        ports:
        - containerPort: 7051
        - containerPort: 7053
        volumeMounts:
        - mountPath: /host/var/run/
          name: run
        - mountPath: /etc/hyperledger/fabric/msp
          name: msp
        - mountPath: /etc/hyperledger/fabric/tls
          name: tls
        - mountPath: /var/hyperledger/production
          name: production
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
      restartPolicy: Always
      volumes:
      - name: run
        hostPath:
          path: /var/run/
      - name: msp
        hostPath:
          path: /var/fabric-net/crypto-config/peerOrganizations/org3.fabric-net.svc.cluster.local/peers/peer0-org3.fabric-net.svc.cluster.local/msp
      - name: tls
        hostPath:
          path: /var/fabric-net/crypto-config/peerOrganizations/org3.fabric-net.svc.cluster.local/peers/peer0-org3.fabric-net.svc.cluster.local/tls
      - name: production
        hostPath:
          path: /var/fabric-net/production/peer0-org3
      nodeSelector:
        bc: "true"

